import { type ThemeConfig } from "..";
import type { ClassValue } from "clsx";
export declare function getTheme<K extends keyof ThemeConfig>(componentKey: K): ThemeConfig[K];
type Slots<T extends {
    slots: Record<string, unknown>;
}> = Omit<T["slots"], "base">;
export type Classes<T extends {
    slots: Record<string, unknown>;
}> = {
    classes?: Partial<{
        [K in keyof Slots<T>]: ClassValue;
    }>;
};
/**
 * Warns about deprecated theme-related props and suggests modern alternatives.
 *
 * Shows the component name, deprecated props, migration hints, and usage location (in dev mode).
 *
 * @param component - Name of the component using deprecated props.
 * @param names - Record of deprecated prop names and their values.
 * @param replacements - Optional map of deprecated keys to their replacements (e.g., "divClass" â†’ "div").
 */
export declare function warnThemeDeprecation(component: string, names: Record<string, unknown>, replacements?: Record<string, unknown>): void;
export {};
